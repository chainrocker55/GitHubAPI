#pragma checksum "C:\Users\chainrocker\source\repos\TestGithubAPI\GithubAPI\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bef53727f1f4bf8c5a179b3872300bbf18cdf2f1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\chainrocker\source\repos\TestGithubAPI\GithubAPI\Views\_ViewImports.cshtml"
using GithubAPI;

#line default
#line hidden
#line 2 "C:\Users\chainrocker\source\repos\TestGithubAPI\GithubAPI\Views\_ViewImports.cshtml"
using GithubAPI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bef53727f1f4bf8c5a179b3872300bbf18cdf2f1", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"345bf42da3367081ac91579c7aff3cebce0d3f51", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formSearchUser"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\chainrocker\source\repos\TestGithubAPI\GithubAPI\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 158, true);
            WriteLiteral("\r\n    <div class=\"section\">\r\n        <h1>Search user on GitHub</h1>\r\n        <div id=\"NotFoundUser\" class=\"alert \" role=\"alert\">\r\n\r\n        </div>\r\n\r\n        ");
            EndContext();
            BeginContext(203, 540, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d4eb8a07ef547cab0ee572ba6038c45", async() => {
                BeginContext(249, 487, true);
                WriteLiteral(@"
            <div class=""form-group mb-2"">
                <label style=""margin-right:10px;font-style:normal;font-size:2em"" for=""user"" class="""">User Github:</label>
            </div>
            <div class=""form-group mx-sm-3 mb-2"">
                <input type=""text""  class=""form-control"" id=""user"" required placeholder=""Enter user"">
            </div>
            <button type=""button"" onclick=""checkNull()"" id=""inputUser"" class=""btn btn-primary mb-2"">Search</button>
        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(743, 421, true);
            WriteLiteral(@"
        <br />
       
        <div class=""row"">
            <div class=""col-sm-8"">
                <h4 id=""titleRepository""></h4>
            </div>
            <div class=""col-sm-4"" >
                <h4 id=""titleLanguages""></h4>
                
            </div>
        </div>

        <div class=""row"">
            <div class=""col-sm-8"">
                <ul id=""repository"" class=""flex-column"">

");
            EndContext();
            BeginContext(1215, 213, true);
            WriteLiteral("                </ul>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div id=\"loadingLanguages\" class=\"loader hidden\">  </div>\r\n                <ul id=\"languages\" class=\"flex-column\">\r\n\r\n");
            EndContext();
            BeginContext(1478, 5625, true);
            WriteLiteral(@"                </ul>
            </div>
        </div>

    </div>



<script type=""text/javascript"">
    $('#user').keypress(function(event){
	
	var keycode = (event.keyCode ? event.keyCode : event.which);
	if(keycode == '13'){
		alert('You pressed a ""enter"" key in textbox');	
	}

    });
    function checkNull() {
        event.preventDefault();
        var user = $(""#user"").val()
        if (user.length == 0 || user == """") {
            var helper = document.getElementById(""NotFoundUser"")
            helper.innerHTML = ""Please enter your username GitHub in textbox.""
            helper.classList.add(""alert-danger"")
        } else {
            loadRepository(user) 
        }
    }

    function loadRepository(user) {
        //var user = $(""#user"").val()
        $(""#repository"").empty()
        $(""#languages"").empty()
        $.ajax({
            headers: {
                Accept: ""application/vnd.github.symmetra-preview+json"",
                ""Content-Type"": ""applicatio");
            WriteLiteral(@"n/json"",
                ""Authorization"": ""token ca9fb3f5702aebd9213eb80a7c8e49a0f468b430"",
                
            },
            url: ""https://api.github.com/users/"" + user + ""/repos"",
            
            method: 'GET',
            credentials: 'same-origin',
            success: function (res) {

                if (res.length != 0) {
                    var helper = document.getElementById(""NotFoundUser"")
                    helper.classList.remove(""alert-danger"")
                    helper.innerHTML = null
                    render(res, user, async function (result) {
                        console.log(result)
                        var mapData = await mapReduce(result)
                        console.log(mapData)
                        await renderLanguages(mapData)
                        document.getElementById(""loadingLanguages"").classList.add(""hidden"")

                    })
                } else {
                    var helper = document.getElementById(""NotFo");
            WriteLiteral(@"undUser"")
                    helper.innerHTML = ""Not found user "" + user + "" from github""
                    helper.classList.add(""alert-danger"")
                }
                
            },
            error: function (jqXHR, textStatus, errorThrown) {
                var helper = document.getElementById(""NotFoundUser"")
                console.log(jqXHR.status);
                console.log(textStatus);
                console.log(errorThrown);
                //if (err.statusCode == 401 || err.statusCode == 403) {
                //    helper.innerHTML = ""Accese to token is expire or not permisstion.""
                //} else {
                //    helper.innerHTML = errorThrown + "" user "" + user + "" from github""
                //}
                helper.innerHTML = errorThrown + "" user "" + user + "" from GitHub""
                helper.classList.add(""alert-danger"")
                document.getElementById(""titleRepository"").innerHTML = null
                document.getElementById(""t");
            WriteLiteral(@"itleLanguages"").innerHTML = """"
                document.getElementById(""loadingLanguages"").classList.add(""hidden"")

            }
        });

    }

    function render(data, user, callback) {
        var api = ""https://api.github.com/repos/"" + user + ""/""
        var type = ""/zipball/master""
        var languages = []
        document.getElementById(""titleRepository"").innerHTML = ""All Repository : "" + user
        document.getElementById(""titleLanguages"").innerHTML = ""Qualification Languages""
        document.getElementById(""loadingLanguages"").classList.remove(""hidden"")
        $.each(data, function (index, element) {
            $(""#repository"").append(""<li class=\""nav-item\""><a class=\""nav-link\"" href=\"""" + api + element.name + type + ""\"">"" + (index + 1) + "" "" + element.name + ""</a></li>"")
            search(element.name, user, function (res) {

                //$(""#repository"").append(""<li class=\""nav-item\"">""+(index+1)+"". "" + JSON.stringify(res) + ""</li>"")
                var obj = J");
            WriteLiteral(@"SON.parse(JSON.stringify(res))
                languages.push(obj)
                if (languages.length == data.length) {
                    callback(languages)
                }
            });
        });


    }

    function renderLanguages(data) {

        $.each(data, function (key, value) {
            $(""#languages"").append(""<li class=\""nav-item\""><b>"" + key + "" </b> score : "" + value + ""</li>"")
        });
    }

    function getData(data) {

        $(""#repository"").append(""<li class=\""nav-item\""> "" + JSON.stringify(data) + ""</li>"")

    }

    function search(repo, user, callback) {
        $.ajax({
            headers: {
                Accept: ""aapplication/vnd.github.v3+json"",
                ""Content-Type"": ""application/vnd.github.v3+json"",
                ""Authorization"": ""token 08244c30f9e6951d73a814e34d26b5d03c5e6e5b"",
                ""User-Agent"": ""Awesome-Octocat-App""
            },
            url: ""https://api.github.com/repos/"" + user + ""/"" + repo + ""/la");
            WriteLiteral(@"nguages"",
            method: 'GET',
            success: callback
        });
    }
    function mapReduce(data) {
        var result = data.reduce(function (r, e) {
            return Object.keys(e).forEach(function (k) {
                if (!r[k]) {
                    r[k] = parseInt(e[k])
                }
                else {
                    r[k] = parseInt(r[k]) + parseInt(e[k])
                }
            }), r
        }, {})

        return result
    }
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
